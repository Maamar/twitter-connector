/*
 * Generated by the Mule project wizard. http://mule.mulesoft.org
 *
 * The software in this package is published under the terms of the CPAL v1.0
 * license, a copy of which has been included with this distribution in the
 * LICENSE.txt file.
 */

package org.mule.ibeans.twitter.config;

import org.mule.config.spring.handlers.AbstractPojoNamespaceHandler;
import org.mule.config.spring.parsers.generic.OrphanDefinitionParser;
import org.mule.ibeans.twitter.TwitterIBean;

/**
 * Registers a Bean Definition Parser for handling elements defined in
 * META-INF/mule-twitter.xsd
 */
public class TwitterNamespaceHandler extends AbstractPojoNamespaceHandler
{
    public void init()
    {
        // Config
        registerMuleBeanDefinitionParser("config",
            new OrphanDefinitionParser(TwitterIBeanFactoryBean.class, true)).addIgnored("name");;

        // Timeline
        registerMuleBeanDefinitionParser("public-timeline", new InvokerMessageProcessorDefinitionParser(
            "messageProcessor", TwitterIBean.class, "getPublicTimeline", new String[]{}));
        registerMuleBeanDefinitionParser("user-timeline", new InvokerMessageProcessorDefinitionParser(
            "messageProcessor", TwitterIBean.class, "getUserTimeline", new String[]{"userId", "screenName",
                "count", "sinceId", "maxId", "page"}, new String[]{"oauthToken", "oauthTokenSecret"}));
        registerMuleBeanDefinitionParser("friends-timeline", new InvokerMessageProcessorDefinitionParser(
            "messageProcessor", TwitterIBean.class, "getFriendsTimeline", new String[]{"count", "sinceId",
                "maxId", "page"}, new String[]{"oauthToken", "oauthTokenSecret"}));
        registerMuleBeanDefinitionParser("mentions", new InvokerMessageProcessorDefinitionParser(
            "messageProcessor", TwitterIBean.class, "getMentions", new String[]{"count", "sinceId", "maxId",
                "page"}, new String[]{"oauthToken", "oauthTokenSecret"}));

        // Search
        registerMuleBeanDefinitionParser("search", new InvokerMessageProcessorDefinitionParser(
            "messageProcessor", TwitterIBean.class, "search", new String[]{"query", "lang", "local", "rpp",
                "page", "sinceId", "geocode", "showUser"}, new String[]{"oauthToken", "oauthTokenSecret"}));

        // Status
        registerMuleBeanDefinitionParser("update-status", new InvokerMessageProcessorDefinitionParser(
            "messageProcessor", TwitterIBean.class, "statusesUpdate", new String[]{"status"}, new String[]{"oauthToken", "oauthTokenSecret"}));
        registerMuleBeanDefinitionParser("show-status", new InvokerMessageProcessorDefinitionParser(
            "messageProcessor", TwitterIBean.class, "statusesShow", new String[]{"statusId"}, new String[]{
                "oauthToken", "oauthTokenSecret"}));
        registerMuleBeanDefinitionParser("destroy-status", new InvokerMessageProcessorDefinitionParser(
            "messageProcessor", TwitterIBean.class, "statusesDestroy", new String[]{"statusId"},
            new String[]{"oauthToken", "oauthTokenSecret"}));

        // User
        registerMuleBeanDefinitionParser("user", new InvokerMessageProcessorDefinitionParser(
            "messageProcessor", TwitterIBean.class, "getUser", new String[]{"screenName"}, new String[]{
                "oauthToken", "oauthTokenSecret"}));

    }

}
